// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _dataflow_in_loop_lea_HH_
#define _dataflow_in_loop_lea_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "match_x4_proc.h"
#include "i2_proc.h"
#include "dataflow_in_loop_dEe.h"
#include "fifo_w64_d6238_A.h"
#include "fifo_w5_d2_A.h"

namespace ap_rtl {

struct dataflow_in_loop_lea : public sc_module {
    // Port declarations 69
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_out< sc_lv<13> > hcl_trainLabels_V_address0;
    sc_out< sc_logic > hcl_trainLabels_V_ce0;
    sc_out< sc_lv<32> > hcl_trainLabels_V_d0;
    sc_in< sc_lv<32> > hcl_trainLabels_V_q0;
    sc_out< sc_logic > hcl_trainLabels_V_we0;
    sc_out< sc_lv<13> > hcl_trainLabels_V_address1;
    sc_out< sc_logic > hcl_trainLabels_V_ce1;
    sc_out< sc_lv<32> > hcl_trainLabels_V_d1;
    sc_in< sc_lv<32> > hcl_trainLabels_V_q1;
    sc_out< sc_logic > hcl_trainLabels_V_we1;
    sc_in< sc_lv<5> > p_0510_0;
    sc_out< sc_lv<20> > hcl_in_train_V_address0;
    sc_out< sc_logic > hcl_in_train_V_ce0;
    sc_out< sc_lv<64> > hcl_in_train_V_d0;
    sc_in< sc_lv<64> > hcl_in_train_V_q0;
    sc_out< sc_logic > hcl_in_train_V_we0;
    sc_out< sc_lv<20> > hcl_in_train_V_address1;
    sc_out< sc_logic > hcl_in_train_V_ce1;
    sc_out< sc_lv<64> > hcl_in_train_V_d1;
    sc_in< sc_lv<64> > hcl_in_train_V_q1;
    sc_out< sc_logic > hcl_in_train_V_we1;
    sc_out< sc_lv<5> > compute1_V_address0;
    sc_out< sc_logic > compute1_V_ce0;
    sc_out< sc_lv<32> > compute1_V_d0;
    sc_in< sc_lv<32> > compute1_V_q0;
    sc_out< sc_logic > compute1_V_we0;
    sc_out< sc_lv<5> > compute1_V_address1;
    sc_out< sc_logic > compute1_V_ce1;
    sc_out< sc_lv<32> > compute1_V_d1;
    sc_in< sc_lv<32> > compute1_V_q1;
    sc_out< sc_logic > compute1_V_we1;
    sc_out< sc_lv<18> > hcl_rdv3_V_address0;
    sc_out< sc_logic > hcl_rdv3_V_ce0;
    sc_out< sc_lv<64> > hcl_rdv3_V_d0;
    sc_in< sc_lv<64> > hcl_rdv3_V_q0;
    sc_out< sc_logic > hcl_rdv3_V_we0;
    sc_out< sc_lv<18> > hcl_rdv3_V_address1;
    sc_out< sc_logic > hcl_rdv3_V_ce1;
    sc_out< sc_lv<64> > hcl_rdv3_V_d1;
    sc_in< sc_lv<64> > hcl_rdv3_V_q1;
    sc_out< sc_logic > hcl_rdv3_V_we1;
    sc_out< sc_lv<12> > prototype_V_address0;
    sc_out< sc_logic > prototype_V_ce0;
    sc_out< sc_lv<64> > prototype_V_d0;
    sc_in< sc_lv<64> > prototype_V_q0;
    sc_out< sc_logic > prototype_V_we0;
    sc_out< sc_lv<12> > prototype_V_address1;
    sc_out< sc_logic > prototype_V_ce1;
    sc_out< sc_lv<64> > prototype_V_d1;
    sc_in< sc_lv<64> > prototype_V_q1;
    sc_out< sc_logic > prototype_V_we1;
    sc_out< sc_lv<18> > prototypeCounter_V_address0;
    sc_out< sc_logic > prototypeCounter_V_ce0;
    sc_out< sc_lv<32> > prototypeCounter_V_d0;
    sc_in< sc_lv<32> > prototypeCounter_V_q0;
    sc_out< sc_logic > prototypeCounter_V_we0;
    sc_out< sc_lv<18> > prototypeCounter_V_address1;
    sc_out< sc_logic > prototypeCounter_V_ce1;
    sc_out< sc_lv<32> > prototypeCounter_V_d1;
    sc_in< sc_lv<32> > prototypeCounter_V_q1;
    sc_out< sc_logic > prototypeCounter_V_we1;
    sc_in< sc_logic > p_0510_0_ap_vld;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_logic > ap_idle;
    sc_in< sc_logic > ap_continue;
    sc_signal< sc_logic > ap_var_for_const2;
    sc_signal< sc_logic > ap_var_for_const0;
    sc_signal< sc_lv<1> > ap_var_for_const1;


    // Module declarations
    dataflow_in_loop_lea(sc_module_name name);
    SC_HAS_PROCESS(dataflow_in_loop_lea);

    ~dataflow_in_loop_lea();

    sc_trace_file* mVcdFile;

    dataflow_in_loop_dEe* compute2_V_U;
    match_x4_proc* match_x4_proc_U0;
    i2_proc* i2_proc_U0;
    fifo_w64_d6238_A* match2_channel_U;
    fifo_w5_d2_A* p_0510_0_c_U;
    sc_signal< sc_lv<1> > compute2_V_i_q0;
    sc_signal< sc_lv<1> > compute2_V_t_q0;
    sc_signal< sc_logic > match_x4_proc_U0_ap_start;
    sc_signal< sc_logic > match_x4_proc_U0_ap_done;
    sc_signal< sc_logic > match_x4_proc_U0_ap_continue;
    sc_signal< sc_logic > match_x4_proc_U0_ap_idle;
    sc_signal< sc_logic > match_x4_proc_U0_ap_ready;
    sc_signal< sc_lv<13> > match_x4_proc_U0_hcl_trainLabels_V_address0;
    sc_signal< sc_logic > match_x4_proc_U0_hcl_trainLabels_V_ce0;
    sc_signal< sc_lv<5> > match_x4_proc_U0_compute2_V1_address0;
    sc_signal< sc_logic > match_x4_proc_U0_compute2_V1_ce0;
    sc_signal< sc_logic > match_x4_proc_U0_compute2_V1_we0;
    sc_signal< sc_lv<1> > match_x4_proc_U0_compute2_V1_d0;
    sc_signal< sc_lv<20> > match_x4_proc_U0_hcl_in_train_V_address0;
    sc_signal< sc_logic > match_x4_proc_U0_hcl_in_train_V_ce0;
    sc_signal< sc_lv<64> > match_x4_proc_U0_match2_din;
    sc_signal< sc_logic > match_x4_proc_U0_match2_write;
    sc_signal< sc_lv<5> > match_x4_proc_U0_p_0510_0_out_din;
    sc_signal< sc_logic > match_x4_proc_U0_p_0510_0_out_write;
    sc_signal< sc_logic > ap_channel_done_compute2_V;
    sc_signal< sc_logic > match_x4_proc_U0_compute2_V1_full_n;
    sc_signal< sc_logic > i2_proc_U0_ap_start;
    sc_signal< sc_logic > i2_proc_U0_ap_done;
    sc_signal< sc_logic > i2_proc_U0_ap_continue;
    sc_signal< sc_logic > i2_proc_U0_ap_idle;
    sc_signal< sc_logic > i2_proc_U0_ap_ready;
    sc_signal< sc_lv<5> > i2_proc_U0_compute2_V1_address0;
    sc_signal< sc_logic > i2_proc_U0_compute2_V1_ce0;
    sc_signal< sc_logic > i2_proc_U0_p_0510_0_read;
    sc_signal< sc_lv<5> > i2_proc_U0_compute1_V_address0;
    sc_signal< sc_logic > i2_proc_U0_compute1_V_ce0;
    sc_signal< sc_logic > i2_proc_U0_compute1_V_we0;
    sc_signal< sc_lv<32> > i2_proc_U0_compute1_V_d0;
    sc_signal< sc_logic > i2_proc_U0_match2_read;
    sc_signal< sc_lv<18> > i2_proc_U0_hcl_rdv3_V_address0;
    sc_signal< sc_logic > i2_proc_U0_hcl_rdv3_V_ce0;
    sc_signal< sc_lv<12> > i2_proc_U0_prototype_V_address0;
    sc_signal< sc_logic > i2_proc_U0_prototype_V_ce0;
    sc_signal< sc_lv<8> > i2_proc_U0_prototype_V_we0;
    sc_signal< sc_lv<64> > i2_proc_U0_prototype_V_d0;
    sc_signal< sc_lv<18> > i2_proc_U0_prototypeCounter_V_address0;
    sc_signal< sc_logic > i2_proc_U0_prototypeCounter_V_ce0;
    sc_signal< sc_logic > i2_proc_U0_prototypeCounter_V_we0;
    sc_signal< sc_lv<32> > i2_proc_U0_prototypeCounter_V_d0;
    sc_signal< sc_logic > ap_sync_continue;
    sc_signal< sc_logic > compute2_V_i_full_n;
    sc_signal< sc_logic > compute2_V_t_empty_n;
    sc_signal< sc_logic > match2_channel_full_n;
    sc_signal< sc_lv<64> > match2_channel_dout;
    sc_signal< sc_logic > match2_channel_empty_n;
    sc_signal< sc_logic > p_0510_0_c_full_n;
    sc_signal< sc_lv<5> > p_0510_0_c_dout;
    sc_signal< sc_logic > p_0510_0_c_empty_n;
    sc_signal< sc_logic > ap_sync_done;
    sc_signal< sc_logic > ap_sync_ready;
    sc_signal< sc_logic > ap_sync_reg_match_x4_proc_U0_ap_ready;
    sc_signal< sc_logic > ap_sync_match_x4_proc_U0_ap_ready;
    sc_signal< sc_lv<2> > match_x4_proc_U0_ap_ready_count;
    sc_signal< sc_logic > ap_sync_reg_i2_proc_U0_ap_ready;
    sc_signal< sc_logic > ap_sync_i2_proc_U0_ap_ready;
    sc_signal< sc_lv<2> > i2_proc_U0_ap_ready_count;
    sc_signal< sc_logic > match_x4_proc_U0_start_full_n;
    sc_signal< sc_logic > match_x4_proc_U0_start_write;
    sc_signal< sc_logic > i2_proc_U0_start_full_n;
    sc_signal< sc_logic > i2_proc_U0_start_write;
    static const sc_logic ap_const_logic_1;
    static const sc_lv<13> ap_const_lv13_0;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<20> ap_const_lv20_0;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<18> ap_const_lv18_0;
    static const sc_lv<12> ap_const_lv12_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<2> ap_const_lv2_1;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const2();
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const1();
    void thread_ap_clk_no_reset_();
    void thread_ap_channel_done_compute2_V();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_sync_continue();
    void thread_ap_sync_done();
    void thread_ap_sync_i2_proc_U0_ap_ready();
    void thread_ap_sync_match_x4_proc_U0_ap_ready();
    void thread_ap_sync_ready();
    void thread_compute1_V_address0();
    void thread_compute1_V_address1();
    void thread_compute1_V_ce0();
    void thread_compute1_V_ce1();
    void thread_compute1_V_d0();
    void thread_compute1_V_d1();
    void thread_compute1_V_we0();
    void thread_compute1_V_we1();
    void thread_hcl_in_train_V_address0();
    void thread_hcl_in_train_V_address1();
    void thread_hcl_in_train_V_ce0();
    void thread_hcl_in_train_V_ce1();
    void thread_hcl_in_train_V_d0();
    void thread_hcl_in_train_V_d1();
    void thread_hcl_in_train_V_we0();
    void thread_hcl_in_train_V_we1();
    void thread_hcl_rdv3_V_address0();
    void thread_hcl_rdv3_V_address1();
    void thread_hcl_rdv3_V_ce0();
    void thread_hcl_rdv3_V_ce1();
    void thread_hcl_rdv3_V_d0();
    void thread_hcl_rdv3_V_d1();
    void thread_hcl_rdv3_V_we0();
    void thread_hcl_rdv3_V_we1();
    void thread_hcl_trainLabels_V_address0();
    void thread_hcl_trainLabels_V_address1();
    void thread_hcl_trainLabels_V_ce0();
    void thread_hcl_trainLabels_V_ce1();
    void thread_hcl_trainLabels_V_d0();
    void thread_hcl_trainLabels_V_d1();
    void thread_hcl_trainLabels_V_we0();
    void thread_hcl_trainLabels_V_we1();
    void thread_i2_proc_U0_ap_continue();
    void thread_i2_proc_U0_ap_start();
    void thread_i2_proc_U0_start_full_n();
    void thread_i2_proc_U0_start_write();
    void thread_match_x4_proc_U0_ap_continue();
    void thread_match_x4_proc_U0_ap_start();
    void thread_match_x4_proc_U0_compute2_V1_full_n();
    void thread_match_x4_proc_U0_start_full_n();
    void thread_match_x4_proc_U0_start_write();
    void thread_prototypeCounter_V_address0();
    void thread_prototypeCounter_V_address1();
    void thread_prototypeCounter_V_ce0();
    void thread_prototypeCounter_V_ce1();
    void thread_prototypeCounter_V_d0();
    void thread_prototypeCounter_V_d1();
    void thread_prototypeCounter_V_we0();
    void thread_prototypeCounter_V_we1();
    void thread_prototype_V_address0();
    void thread_prototype_V_address1();
    void thread_prototype_V_ce0();
    void thread_prototype_V_ce1();
    void thread_prototype_V_d0();
    void thread_prototype_V_d1();
    void thread_prototype_V_we0();
    void thread_prototype_V_we1();
};

}

using namespace ap_rtl;

#endif
