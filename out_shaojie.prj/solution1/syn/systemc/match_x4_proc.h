// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _match_x4_proc_HH_
#define _match_x4_proc_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct match_x4_proc : public sc_module {
    // Port declarations 24
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<13> > hcl_trainLabels_V_address0;
    sc_out< sc_logic > hcl_trainLabels_V_ce0;
    sc_in< sc_lv<32> > hcl_trainLabels_V_q0;
    sc_out< sc_lv<5> > compute2_V1_address0;
    sc_out< sc_logic > compute2_V1_ce0;
    sc_out< sc_logic > compute2_V1_we0;
    sc_out< sc_lv<1> > compute2_V1_d0;
    sc_in< sc_lv<5> > p_0510_0;
    sc_out< sc_lv<20> > hcl_in_train_V_address0;
    sc_out< sc_logic > hcl_in_train_V_ce0;
    sc_in< sc_lv<64> > hcl_in_train_V_q0;
    sc_out< sc_lv<64> > match2_din;
    sc_in< sc_logic > match2_full_n;
    sc_out< sc_logic > match2_write;
    sc_out< sc_lv<5> > p_0510_0_out_din;
    sc_in< sc_logic > p_0510_0_out_full_n;
    sc_out< sc_logic > p_0510_0_out_write;


    // Module declarations
    match_x4_proc(sc_module_name name);
    SC_HAS_PROCESS(match_x4_proc);

    ~match_x4_proc();

    sc_trace_file* mVcdFile;

    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<7> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > match2_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<1> > icmp_ln879_reg_301;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<1> > icmp_ln879_fu_251_p2;
    sc_signal< sc_logic > p_0510_0_out_blk_n;
    sc_signal< sc_lv<5> > compute2_V1_addr_reg_260;
    sc_signal< bool > ap_block_state1;
    sc_signal< sc_lv<32> > zext_ln32_fu_202_p1;
    sc_signal< sc_lv<32> > zext_ln32_reg_265;
    sc_signal< sc_lv<20> > add_ln887_fu_206_p2;
    sc_signal< sc_lv<20> > add_ln887_reg_270;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<13> > x4_V_fu_218_p2;
    sc_signal< sc_lv<13> > x4_V_reg_278;
    sc_signal< sc_lv<13> > hcl_trainLabels_V_ad_reg_283;
    sc_signal< sc_lv<1> > icmp_ln887_fu_212_p2;
    sc_signal< sc_lv<8> > y2_V_fu_235_p2;
    sc_signal< sc_lv<8> > y2_V_reg_291;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<20> > add_ln321_fu_245_p2;
    sc_signal< sc_lv<20> > add_ln321_reg_296;
    sc_signal< sc_lv<1> > icmp_ln887_28_fu_229_p2;
    sc_signal< bool > ap_block_state4;
    sc_signal< sc_lv<13> > p_0465_0_i_i_reg_150;
    sc_signal< sc_lv<20> > phi_mul_reg_161;
    sc_signal< sc_lv<8> > p_0618_0_i_i_reg_173;
    sc_signal< bool > ap_block_state7;
    sc_signal< sc_lv<1> > ap_phi_mux_storemerge_i_i_phi_fu_188_p4;
    sc_signal< sc_lv<1> > storemerge_i_i_reg_184;
    sc_signal< sc_lv<64> > zext_ln544_fu_197_p1;
    sc_signal< sc_lv<64> > zext_ln544_21_fu_224_p1;
    sc_signal< sc_lv<64> > zext_ln321_2_fu_256_p1;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<20> > zext_ln321_fu_241_p1;
    sc_signal< sc_lv<7> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<7> ap_ST_fsm_state1;
    static const sc_lv<7> ap_ST_fsm_state2;
    static const sc_lv<7> ap_ST_fsm_state3;
    static const sc_lv<7> ap_ST_fsm_state4;
    static const sc_lv<7> ap_ST_fsm_state5;
    static const sc_lv<7> ap_ST_fsm_state6;
    static const sc_lv<7> ap_ST_fsm_state7;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<13> ap_const_lv13_0;
    static const sc_lv<20> ap_const_lv20_0;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<20> ap_const_lv20_9C;
    static const sc_lv<13> ap_const_lv13_185E;
    static const sc_lv<13> ap_const_lv13_1;
    static const sc_lv<8> ap_const_lv8_9C;
    static const sc_lv<8> ap_const_lv8_1;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_add_ln321_fu_245_p2();
    void thread_add_ln887_fu_206_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_block_state1();
    void thread_ap_block_state4();
    void thread_ap_block_state7();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_phi_mux_storemerge_i_i_phi_fu_188_p4();
    void thread_ap_ready();
    void thread_compute2_V1_address0();
    void thread_compute2_V1_ce0();
    void thread_compute2_V1_d0();
    void thread_compute2_V1_we0();
    void thread_hcl_in_train_V_address0();
    void thread_hcl_in_train_V_ce0();
    void thread_hcl_trainLabels_V_address0();
    void thread_hcl_trainLabels_V_ce0();
    void thread_icmp_ln879_fu_251_p2();
    void thread_icmp_ln887_28_fu_229_p2();
    void thread_icmp_ln887_fu_212_p2();
    void thread_match2_blk_n();
    void thread_match2_din();
    void thread_match2_write();
    void thread_p_0510_0_out_blk_n();
    void thread_p_0510_0_out_din();
    void thread_p_0510_0_out_write();
    void thread_x4_V_fu_218_p2();
    void thread_y2_V_fu_235_p2();
    void thread_zext_ln321_2_fu_256_p1();
    void thread_zext_ln321_fu_241_p1();
    void thread_zext_ln32_fu_202_p1();
    void thread_zext_ln544_21_fu_224_p1();
    void thread_zext_ln544_fu_197_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
