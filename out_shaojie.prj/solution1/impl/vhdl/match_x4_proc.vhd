-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity match_x4_proc is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    hcl_trainLabels_V_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    hcl_trainLabels_V_ce0 : OUT STD_LOGIC;
    hcl_trainLabels_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    compute2_V1_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    compute2_V1_ce0 : OUT STD_LOGIC;
    compute2_V1_we0 : OUT STD_LOGIC;
    compute2_V1_d0 : OUT STD_LOGIC_VECTOR (0 downto 0);
    p_0510_0 : IN STD_LOGIC_VECTOR (4 downto 0);
    hcl_in_train_V_address0 : OUT STD_LOGIC_VECTOR (19 downto 0);
    hcl_in_train_V_ce0 : OUT STD_LOGIC;
    hcl_in_train_V_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    match2_din : OUT STD_LOGIC_VECTOR (63 downto 0);
    match2_full_n : IN STD_LOGIC;
    match2_write : OUT STD_LOGIC;
    p_0510_0_out_din : OUT STD_LOGIC_VECTOR (4 downto 0);
    p_0510_0_out_full_n : IN STD_LOGIC;
    p_0510_0_out_write : OUT STD_LOGIC );
end;


architecture behav of match_x4_proc is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (6 downto 0) := "0000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (6 downto 0) := "0000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (6 downto 0) := "0001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (6 downto 0) := "0010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (6 downto 0) := "0100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (6 downto 0) := "1000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv20_0 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv20_9C : STD_LOGIC_VECTOR (19 downto 0) := "00000000000010011100";
    constant ap_const_lv13_185E : STD_LOGIC_VECTOR (12 downto 0) := "1100001011110";
    constant ap_const_lv13_1 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    constant ap_const_lv8_9C : STD_LOGIC_VECTOR (7 downto 0) := "10011100";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal match2_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal icmp_ln879_reg_301 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal icmp_ln879_fu_251_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_0510_0_out_blk_n : STD_LOGIC;
    signal compute2_V1_addr_reg_260 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal zext_ln32_fu_202_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln32_reg_265 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln887_fu_206_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal add_ln887_reg_270 : STD_LOGIC_VECTOR (19 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal x4_V_fu_218_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal x4_V_reg_278 : STD_LOGIC_VECTOR (12 downto 0);
    signal hcl_trainLabels_V_ad_reg_283 : STD_LOGIC_VECTOR (12 downto 0);
    signal icmp_ln887_fu_212_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal y2_V_fu_235_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal y2_V_reg_291 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal add_ln321_fu_245_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal add_ln321_reg_296 : STD_LOGIC_VECTOR (19 downto 0);
    signal icmp_ln887_28_fu_229_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state4 : BOOLEAN;
    signal p_0465_0_i_i_reg_150 : STD_LOGIC_VECTOR (12 downto 0);
    signal phi_mul_reg_161 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_0618_0_i_i_reg_173 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_state7 : BOOLEAN;
    signal ap_phi_mux_storemerge_i_i_phi_fu_188_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal storemerge_i_i_reg_184 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln544_fu_197_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln544_21_fu_224_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln321_2_fu_256_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal zext_ln321_fu_241_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (6 downto 0);


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((icmp_ln887_fu_212_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    p_0465_0_i_i_reg_150_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln887_28_fu_229_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                p_0465_0_i_i_reg_150 <= x4_V_reg_278;
            elsif ((not(((p_0510_0_out_full_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                p_0465_0_i_i_reg_150 <= ap_const_lv13_0;
            end if; 
        end if;
    end process;

    p_0618_0_i_i_reg_173_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((icmp_ln879_reg_301 = ap_const_lv1_1) and (match2_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                p_0618_0_i_i_reg_173 <= y2_V_reg_291;
            elsif (((icmp_ln887_fu_212_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                p_0618_0_i_i_reg_173 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    phi_mul_reg_161_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln887_28_fu_229_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                phi_mul_reg_161 <= add_ln887_reg_270;
            elsif ((not(((p_0510_0_out_full_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                phi_mul_reg_161 <= ap_const_lv20_0;
            end if; 
        end if;
    end process;

    storemerge_i_i_reg_184_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((icmp_ln879_reg_301 = ap_const_lv1_1) and (match2_full_n = ap_const_logic_0))) and (icmp_ln879_reg_301 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                storemerge_i_i_reg_184 <= ap_const_lv1_1;
            elsif ((not(((icmp_ln879_fu_251_p2 = ap_const_lv1_0) and (match2_full_n = ap_const_logic_0))) and (icmp_ln879_fu_251_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                storemerge_i_i_reg_184 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln887_28_fu_229_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                add_ln321_reg_296 <= add_ln321_fu_245_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                add_ln887_reg_270 <= add_ln887_fu_206_p2;
                x4_V_reg_278 <= x4_V_fu_218_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((p_0510_0_out_full_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                compute2_V1_addr_reg_260 <= zext_ln544_fu_197_p1(5 - 1 downto 0);
                    zext_ln32_reg_265(4 downto 0) <= zext_ln32_fu_202_p1(4 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln887_fu_212_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                hcl_trainLabels_V_ad_reg_283 <= zext_ln544_21_fu_224_p1(13 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((icmp_ln879_fu_251_p2 = ap_const_lv1_0) and (match2_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                icmp_ln879_reg_301 <= icmp_ln879_fu_251_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                y2_V_reg_291 <= y2_V_fu_235_p2;
            end if;
        end if;
    end process;
    zext_ln32_reg_265(31 downto 5) <= "000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, match2_full_n, p_0510_0_out_full_n, ap_CS_fsm_state7, icmp_ln879_reg_301, ap_CS_fsm_state4, icmp_ln879_fu_251_p2, ap_CS_fsm_state2, icmp_ln887_fu_212_p2, ap_CS_fsm_state3, icmp_ln887_28_fu_229_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((p_0510_0_out_full_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((icmp_ln887_fu_212_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                if (((icmp_ln887_28_fu_229_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state4 => 
                if ((not(((icmp_ln879_fu_251_p2 = ap_const_lv1_0) and (match2_full_n = ap_const_logic_0))) and (icmp_ln879_fu_251_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                elsif ((not(((icmp_ln879_fu_251_p2 = ap_const_lv1_0) and (match2_full_n = ap_const_logic_0))) and (icmp_ln879_fu_251_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                if ((not(((icmp_ln879_reg_301 = ap_const_lv1_1) and (match2_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXX";
        end case;
    end process;
    add_ln321_fu_245_p2 <= std_logic_vector(unsigned(phi_mul_reg_161) + unsigned(zext_ln321_fu_241_p1));
    add_ln887_fu_206_p2 <= std_logic_vector(unsigned(phi_mul_reg_161) + unsigned(ap_const_lv20_9C));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);

    ap_block_state1_assign_proc : process(ap_start, ap_done_reg, p_0510_0_out_full_n)
    begin
                ap_block_state1 <= ((p_0510_0_out_full_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    ap_block_state4_assign_proc : process(match2_full_n, icmp_ln879_fu_251_p2)
    begin
                ap_block_state4 <= ((icmp_ln879_fu_251_p2 = ap_const_lv1_0) and (match2_full_n = ap_const_logic_0));
    end process;


    ap_block_state7_assign_proc : process(match2_full_n, icmp_ln879_reg_301)
    begin
                ap_block_state7 <= ((icmp_ln879_reg_301 = ap_const_lv1_1) and (match2_full_n = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state2, icmp_ln887_fu_212_p2)
    begin
        if (((icmp_ln887_fu_212_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_storemerge_i_i_phi_fu_188_p4_assign_proc : process(ap_CS_fsm_state7, icmp_ln879_reg_301, storemerge_i_i_reg_184)
    begin
        if (((icmp_ln879_reg_301 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            ap_phi_mux_storemerge_i_i_phi_fu_188_p4 <= ap_const_lv1_1;
        else 
            ap_phi_mux_storemerge_i_i_phi_fu_188_p4 <= storemerge_i_i_reg_184;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state2, icmp_ln887_fu_212_p2)
    begin
        if (((icmp_ln887_fu_212_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    compute2_V1_address0 <= compute2_V1_addr_reg_260;

    compute2_V1_ce0_assign_proc : process(match2_full_n, ap_CS_fsm_state7, icmp_ln879_reg_301)
    begin
        if ((not(((icmp_ln879_reg_301 = ap_const_lv1_1) and (match2_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            compute2_V1_ce0 <= ap_const_logic_1;
        else 
            compute2_V1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    compute2_V1_d0 <= ap_phi_mux_storemerge_i_i_phi_fu_188_p4;

    compute2_V1_we0_assign_proc : process(match2_full_n, ap_CS_fsm_state7, icmp_ln879_reg_301)
    begin
        if ((not(((icmp_ln879_reg_301 = ap_const_lv1_1) and (match2_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            compute2_V1_we0 <= ap_const_logic_1;
        else 
            compute2_V1_we0 <= ap_const_logic_0;
        end if; 
    end process;

    hcl_in_train_V_address0 <= zext_ln321_2_fu_256_p1(20 - 1 downto 0);

    hcl_in_train_V_ce0_assign_proc : process(match2_full_n, ap_CS_fsm_state7, icmp_ln879_reg_301, ap_CS_fsm_state4, icmp_ln879_fu_251_p2, ap_CS_fsm_state5, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (not(((icmp_ln879_fu_251_p2 = ap_const_lv1_0) and (match2_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4)) or (not(((icmp_ln879_reg_301 = ap_const_lv1_1) and (match2_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state7)))) then 
            hcl_in_train_V_ce0 <= ap_const_logic_1;
        else 
            hcl_in_train_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    hcl_trainLabels_V_address0 <= hcl_trainLabels_V_ad_reg_283;

    hcl_trainLabels_V_ce0_assign_proc : process(ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            hcl_trainLabels_V_ce0 <= ap_const_logic_1;
        else 
            hcl_trainLabels_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln879_fu_251_p2 <= "1" when (hcl_trainLabels_V_q0 = zext_ln32_reg_265) else "0";
    icmp_ln887_28_fu_229_p2 <= "1" when (p_0618_0_i_i_reg_173 = ap_const_lv8_9C) else "0";
    icmp_ln887_fu_212_p2 <= "1" when (p_0465_0_i_i_reg_150 = ap_const_lv13_185E) else "0";

    match2_blk_n_assign_proc : process(match2_full_n, ap_CS_fsm_state7, icmp_ln879_reg_301, ap_CS_fsm_state4, icmp_ln879_fu_251_p2)
    begin
        if ((((icmp_ln879_fu_251_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((icmp_ln879_reg_301 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7)))) then 
            match2_blk_n <= match2_full_n;
        else 
            match2_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    match2_din_assign_proc : process(hcl_in_train_V_q0, match2_full_n, ap_CS_fsm_state7, icmp_ln879_reg_301, ap_CS_fsm_state4, icmp_ln879_fu_251_p2)
    begin
        if ((not(((icmp_ln879_reg_301 = ap_const_lv1_1) and (match2_full_n = ap_const_logic_0))) and (icmp_ln879_reg_301 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            match2_din <= hcl_in_train_V_q0;
        elsif ((not(((icmp_ln879_fu_251_p2 = ap_const_lv1_0) and (match2_full_n = ap_const_logic_0))) and (icmp_ln879_fu_251_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            match2_din <= ap_const_lv64_0;
        else 
            match2_din <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    match2_write_assign_proc : process(match2_full_n, ap_CS_fsm_state7, icmp_ln879_reg_301, ap_CS_fsm_state4, icmp_ln879_fu_251_p2)
    begin
        if (((not(((icmp_ln879_fu_251_p2 = ap_const_lv1_0) and (match2_full_n = ap_const_logic_0))) and (icmp_ln879_fu_251_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4)) or (not(((icmp_ln879_reg_301 = ap_const_lv1_1) and (match2_full_n = ap_const_logic_0))) and (icmp_ln879_reg_301 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7)))) then 
            match2_write <= ap_const_logic_1;
        else 
            match2_write <= ap_const_logic_0;
        end if; 
    end process;


    p_0510_0_out_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, p_0510_0_out_full_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_0510_0_out_blk_n <= p_0510_0_out_full_n;
        else 
            p_0510_0_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    p_0510_0_out_din <= p_0510_0;

    p_0510_0_out_write_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, p_0510_0_out_full_n)
    begin
        if ((not(((p_0510_0_out_full_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_0510_0_out_write <= ap_const_logic_1;
        else 
            p_0510_0_out_write <= ap_const_logic_0;
        end if; 
    end process;

    x4_V_fu_218_p2 <= std_logic_vector(unsigned(p_0465_0_i_i_reg_150) + unsigned(ap_const_lv13_1));
    y2_V_fu_235_p2 <= std_logic_vector(unsigned(p_0618_0_i_i_reg_173) + unsigned(ap_const_lv8_1));
    zext_ln321_2_fu_256_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln321_reg_296),64));
    zext_ln321_fu_241_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_0618_0_i_i_reg_173),20));
    zext_ln32_fu_202_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_0510_0),32));
    zext_ln544_21_fu_224_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_0465_0_i_i_reg_150),64));
    zext_ln544_fu_197_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_0510_0),64));
end behav;
