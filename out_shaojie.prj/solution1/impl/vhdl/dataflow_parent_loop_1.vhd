-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity dataflow_parent_loop_1 is
port (
    hcl_trainLabels_V_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    hcl_trainLabels_V_ce0 : OUT STD_LOGIC;
    hcl_trainLabels_V_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    hcl_trainLabels_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    hcl_trainLabels_V_we0 : OUT STD_LOGIC;
    hcl_trainLabels_V_address1 : OUT STD_LOGIC_VECTOR (12 downto 0);
    hcl_trainLabels_V_ce1 : OUT STD_LOGIC;
    hcl_trainLabels_V_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    hcl_trainLabels_V_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    hcl_trainLabels_V_we1 : OUT STD_LOGIC;
    hcl_in_train_V_address0 : OUT STD_LOGIC_VECTOR (19 downto 0);
    hcl_in_train_V_ce0 : OUT STD_LOGIC;
    hcl_in_train_V_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    hcl_in_train_V_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    hcl_in_train_V_we0 : OUT STD_LOGIC;
    hcl_in_train_V_address1 : OUT STD_LOGIC_VECTOR (19 downto 0);
    hcl_in_train_V_ce1 : OUT STD_LOGIC;
    hcl_in_train_V_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
    hcl_in_train_V_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
    hcl_in_train_V_we1 : OUT STD_LOGIC;
    compute1_V_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    compute1_V_ce0 : OUT STD_LOGIC;
    compute1_V_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    compute1_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    compute1_V_we0 : OUT STD_LOGIC;
    compute1_V_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
    compute1_V_ce1 : OUT STD_LOGIC;
    compute1_V_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    compute1_V_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    compute1_V_we1 : OUT STD_LOGIC;
    hcl_rdv3_V_address0 : OUT STD_LOGIC_VECTOR (17 downto 0);
    hcl_rdv3_V_ce0 : OUT STD_LOGIC;
    hcl_rdv3_V_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    hcl_rdv3_V_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    hcl_rdv3_V_we0 : OUT STD_LOGIC;
    hcl_rdv3_V_address1 : OUT STD_LOGIC_VECTOR (17 downto 0);
    hcl_rdv3_V_ce1 : OUT STD_LOGIC;
    hcl_rdv3_V_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
    hcl_rdv3_V_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
    hcl_rdv3_V_we1 : OUT STD_LOGIC;
    prototype_V_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    prototype_V_ce0 : OUT STD_LOGIC;
    prototype_V_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    prototype_V_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    prototype_V_we0 : OUT STD_LOGIC;
    prototype_V_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    prototype_V_ce1 : OUT STD_LOGIC;
    prototype_V_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
    prototype_V_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
    prototype_V_we1 : OUT STD_LOGIC;
    prototypeCounter_V_address0 : OUT STD_LOGIC_VECTOR (17 downto 0);
    prototypeCounter_V_ce0 : OUT STD_LOGIC;
    prototypeCounter_V_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    prototypeCounter_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    prototypeCounter_V_we0 : OUT STD_LOGIC;
    prototypeCounter_V_address1 : OUT STD_LOGIC_VECTOR (17 downto 0);
    prototypeCounter_V_ce1 : OUT STD_LOGIC;
    prototypeCounter_V_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    prototypeCounter_V_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    prototypeCounter_V_we1 : OUT STD_LOGIC;
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC );
end;


architecture behav of dataflow_parent_loop_1 is 
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv20_0 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000000";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv18_0 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000000";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv5_1A : STD_LOGIC_VECTOR (4 downto 0) := "11010";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";

    signal dataflow_in_loop_lea_U0_hcl_trainLabels_V_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal dataflow_in_loop_lea_U0_hcl_trainLabels_V_ce0 : STD_LOGIC;
    signal dataflow_in_loop_lea_U0_hcl_trainLabels_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal dataflow_in_loop_lea_U0_hcl_trainLabels_V_we0 : STD_LOGIC;
    signal dataflow_in_loop_lea_U0_hcl_trainLabels_V_address1 : STD_LOGIC_VECTOR (12 downto 0);
    signal dataflow_in_loop_lea_U0_hcl_trainLabels_V_ce1 : STD_LOGIC;
    signal dataflow_in_loop_lea_U0_hcl_trainLabels_V_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal dataflow_in_loop_lea_U0_hcl_trainLabels_V_we1 : STD_LOGIC;
    signal dataflow_in_loop_lea_U0_hcl_in_train_V_address0 : STD_LOGIC_VECTOR (19 downto 0);
    signal dataflow_in_loop_lea_U0_hcl_in_train_V_ce0 : STD_LOGIC;
    signal dataflow_in_loop_lea_U0_hcl_in_train_V_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal dataflow_in_loop_lea_U0_hcl_in_train_V_we0 : STD_LOGIC;
    signal dataflow_in_loop_lea_U0_hcl_in_train_V_address1 : STD_LOGIC_VECTOR (19 downto 0);
    signal dataflow_in_loop_lea_U0_hcl_in_train_V_ce1 : STD_LOGIC;
    signal dataflow_in_loop_lea_U0_hcl_in_train_V_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal dataflow_in_loop_lea_U0_hcl_in_train_V_we1 : STD_LOGIC;
    signal dataflow_in_loop_lea_U0_compute1_V_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal dataflow_in_loop_lea_U0_compute1_V_ce0 : STD_LOGIC;
    signal dataflow_in_loop_lea_U0_compute1_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal dataflow_in_loop_lea_U0_compute1_V_we0 : STD_LOGIC;
    signal dataflow_in_loop_lea_U0_compute1_V_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal dataflow_in_loop_lea_U0_compute1_V_ce1 : STD_LOGIC;
    signal dataflow_in_loop_lea_U0_compute1_V_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal dataflow_in_loop_lea_U0_compute1_V_we1 : STD_LOGIC;
    signal dataflow_in_loop_lea_U0_hcl_rdv3_V_address0 : STD_LOGIC_VECTOR (17 downto 0);
    signal dataflow_in_loop_lea_U0_hcl_rdv3_V_ce0 : STD_LOGIC;
    signal dataflow_in_loop_lea_U0_hcl_rdv3_V_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal dataflow_in_loop_lea_U0_hcl_rdv3_V_we0 : STD_LOGIC;
    signal dataflow_in_loop_lea_U0_hcl_rdv3_V_address1 : STD_LOGIC_VECTOR (17 downto 0);
    signal dataflow_in_loop_lea_U0_hcl_rdv3_V_ce1 : STD_LOGIC;
    signal dataflow_in_loop_lea_U0_hcl_rdv3_V_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal dataflow_in_loop_lea_U0_hcl_rdv3_V_we1 : STD_LOGIC;
    signal dataflow_in_loop_lea_U0_prototype_V_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal dataflow_in_loop_lea_U0_prototype_V_ce0 : STD_LOGIC;
    signal dataflow_in_loop_lea_U0_prototype_V_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal dataflow_in_loop_lea_U0_prototype_V_we0 : STD_LOGIC;
    signal dataflow_in_loop_lea_U0_prototype_V_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal dataflow_in_loop_lea_U0_prototype_V_ce1 : STD_LOGIC;
    signal dataflow_in_loop_lea_U0_prototype_V_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal dataflow_in_loop_lea_U0_prototype_V_we1 : STD_LOGIC;
    signal dataflow_in_loop_lea_U0_prototypeCounter_V_address0 : STD_LOGIC_VECTOR (17 downto 0);
    signal dataflow_in_loop_lea_U0_prototypeCounter_V_ce0 : STD_LOGIC;
    signal dataflow_in_loop_lea_U0_prototypeCounter_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal dataflow_in_loop_lea_U0_prototypeCounter_V_we0 : STD_LOGIC;
    signal dataflow_in_loop_lea_U0_prototypeCounter_V_address1 : STD_LOGIC_VECTOR (17 downto 0);
    signal dataflow_in_loop_lea_U0_prototypeCounter_V_ce1 : STD_LOGIC;
    signal dataflow_in_loop_lea_U0_prototypeCounter_V_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal dataflow_in_loop_lea_U0_prototypeCounter_V_we1 : STD_LOGIC;
    signal dataflow_in_loop_lea_U0_ap_start : STD_LOGIC;
    signal dataflow_in_loop_lea_U0_ap_done : STD_LOGIC;
    signal dataflow_in_loop_lea_U0_ap_ready : STD_LOGIC;
    signal dataflow_in_loop_lea_U0_ap_idle : STD_LOGIC;
    signal dataflow_in_loop_lea_U0_ap_continue : STD_LOGIC;
    signal ap_sync_continue : STD_LOGIC;
    signal ap_sync_done : STD_LOGIC;
    signal ap_sync_ready : STD_LOGIC;
    signal loop_dataflow_input_count : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    signal loop_dataflow_output_count : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    signal bound_minus_1 : STD_LOGIC_VECTOR (4 downto 0);
    signal dataflow_in_loop_lea_U0_start_full_n : STD_LOGIC;
    signal dataflow_in_loop_lea_U0_start_write : STD_LOGIC;

    component dataflow_in_loop_lea IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        hcl_trainLabels_V_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
        hcl_trainLabels_V_ce0 : OUT STD_LOGIC;
        hcl_trainLabels_V_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        hcl_trainLabels_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        hcl_trainLabels_V_we0 : OUT STD_LOGIC;
        hcl_trainLabels_V_address1 : OUT STD_LOGIC_VECTOR (12 downto 0);
        hcl_trainLabels_V_ce1 : OUT STD_LOGIC;
        hcl_trainLabels_V_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        hcl_trainLabels_V_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        hcl_trainLabels_V_we1 : OUT STD_LOGIC;
        p_0510_0 : IN STD_LOGIC_VECTOR (4 downto 0);
        hcl_in_train_V_address0 : OUT STD_LOGIC_VECTOR (19 downto 0);
        hcl_in_train_V_ce0 : OUT STD_LOGIC;
        hcl_in_train_V_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        hcl_in_train_V_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        hcl_in_train_V_we0 : OUT STD_LOGIC;
        hcl_in_train_V_address1 : OUT STD_LOGIC_VECTOR (19 downto 0);
        hcl_in_train_V_ce1 : OUT STD_LOGIC;
        hcl_in_train_V_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        hcl_in_train_V_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
        hcl_in_train_V_we1 : OUT STD_LOGIC;
        compute1_V_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        compute1_V_ce0 : OUT STD_LOGIC;
        compute1_V_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        compute1_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        compute1_V_we0 : OUT STD_LOGIC;
        compute1_V_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
        compute1_V_ce1 : OUT STD_LOGIC;
        compute1_V_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        compute1_V_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        compute1_V_we1 : OUT STD_LOGIC;
        hcl_rdv3_V_address0 : OUT STD_LOGIC_VECTOR (17 downto 0);
        hcl_rdv3_V_ce0 : OUT STD_LOGIC;
        hcl_rdv3_V_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        hcl_rdv3_V_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        hcl_rdv3_V_we0 : OUT STD_LOGIC;
        hcl_rdv3_V_address1 : OUT STD_LOGIC_VECTOR (17 downto 0);
        hcl_rdv3_V_ce1 : OUT STD_LOGIC;
        hcl_rdv3_V_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        hcl_rdv3_V_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
        hcl_rdv3_V_we1 : OUT STD_LOGIC;
        prototype_V_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        prototype_V_ce0 : OUT STD_LOGIC;
        prototype_V_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        prototype_V_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        prototype_V_we0 : OUT STD_LOGIC;
        prototype_V_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        prototype_V_ce1 : OUT STD_LOGIC;
        prototype_V_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        prototype_V_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
        prototype_V_we1 : OUT STD_LOGIC;
        prototypeCounter_V_address0 : OUT STD_LOGIC_VECTOR (17 downto 0);
        prototypeCounter_V_ce0 : OUT STD_LOGIC;
        prototypeCounter_V_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        prototypeCounter_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        prototypeCounter_V_we0 : OUT STD_LOGIC;
        prototypeCounter_V_address1 : OUT STD_LOGIC_VECTOR (17 downto 0);
        prototypeCounter_V_ce1 : OUT STD_LOGIC;
        prototypeCounter_V_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        prototypeCounter_V_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        prototypeCounter_V_we1 : OUT STD_LOGIC;
        p_0510_0_ap_vld : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC );
    end component;



begin
    dataflow_in_loop_lea_U0 : component dataflow_in_loop_lea
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        hcl_trainLabels_V_address0 => dataflow_in_loop_lea_U0_hcl_trainLabels_V_address0,
        hcl_trainLabels_V_ce0 => dataflow_in_loop_lea_U0_hcl_trainLabels_V_ce0,
        hcl_trainLabels_V_d0 => dataflow_in_loop_lea_U0_hcl_trainLabels_V_d0,
        hcl_trainLabels_V_q0 => hcl_trainLabels_V_q0,
        hcl_trainLabels_V_we0 => dataflow_in_loop_lea_U0_hcl_trainLabels_V_we0,
        hcl_trainLabels_V_address1 => dataflow_in_loop_lea_U0_hcl_trainLabels_V_address1,
        hcl_trainLabels_V_ce1 => dataflow_in_loop_lea_U0_hcl_trainLabels_V_ce1,
        hcl_trainLabels_V_d1 => dataflow_in_loop_lea_U0_hcl_trainLabels_V_d1,
        hcl_trainLabels_V_q1 => ap_const_lv32_0,
        hcl_trainLabels_V_we1 => dataflow_in_loop_lea_U0_hcl_trainLabels_V_we1,
        p_0510_0 => loop_dataflow_input_count,
        hcl_in_train_V_address0 => dataflow_in_loop_lea_U0_hcl_in_train_V_address0,
        hcl_in_train_V_ce0 => dataflow_in_loop_lea_U0_hcl_in_train_V_ce0,
        hcl_in_train_V_d0 => dataflow_in_loop_lea_U0_hcl_in_train_V_d0,
        hcl_in_train_V_q0 => hcl_in_train_V_q0,
        hcl_in_train_V_we0 => dataflow_in_loop_lea_U0_hcl_in_train_V_we0,
        hcl_in_train_V_address1 => dataflow_in_loop_lea_U0_hcl_in_train_V_address1,
        hcl_in_train_V_ce1 => dataflow_in_loop_lea_U0_hcl_in_train_V_ce1,
        hcl_in_train_V_d1 => dataflow_in_loop_lea_U0_hcl_in_train_V_d1,
        hcl_in_train_V_q1 => ap_const_lv64_0,
        hcl_in_train_V_we1 => dataflow_in_loop_lea_U0_hcl_in_train_V_we1,
        compute1_V_address0 => dataflow_in_loop_lea_U0_compute1_V_address0,
        compute1_V_ce0 => dataflow_in_loop_lea_U0_compute1_V_ce0,
        compute1_V_d0 => dataflow_in_loop_lea_U0_compute1_V_d0,
        compute1_V_q0 => ap_const_lv32_0,
        compute1_V_we0 => dataflow_in_loop_lea_U0_compute1_V_we0,
        compute1_V_address1 => dataflow_in_loop_lea_U0_compute1_V_address1,
        compute1_V_ce1 => dataflow_in_loop_lea_U0_compute1_V_ce1,
        compute1_V_d1 => dataflow_in_loop_lea_U0_compute1_V_d1,
        compute1_V_q1 => ap_const_lv32_0,
        compute1_V_we1 => dataflow_in_loop_lea_U0_compute1_V_we1,
        hcl_rdv3_V_address0 => dataflow_in_loop_lea_U0_hcl_rdv3_V_address0,
        hcl_rdv3_V_ce0 => dataflow_in_loop_lea_U0_hcl_rdv3_V_ce0,
        hcl_rdv3_V_d0 => dataflow_in_loop_lea_U0_hcl_rdv3_V_d0,
        hcl_rdv3_V_q0 => hcl_rdv3_V_q0,
        hcl_rdv3_V_we0 => dataflow_in_loop_lea_U0_hcl_rdv3_V_we0,
        hcl_rdv3_V_address1 => dataflow_in_loop_lea_U0_hcl_rdv3_V_address1,
        hcl_rdv3_V_ce1 => dataflow_in_loop_lea_U0_hcl_rdv3_V_ce1,
        hcl_rdv3_V_d1 => dataflow_in_loop_lea_U0_hcl_rdv3_V_d1,
        hcl_rdv3_V_q1 => ap_const_lv64_0,
        hcl_rdv3_V_we1 => dataflow_in_loop_lea_U0_hcl_rdv3_V_we1,
        prototype_V_address0 => dataflow_in_loop_lea_U0_prototype_V_address0,
        prototype_V_ce0 => dataflow_in_loop_lea_U0_prototype_V_ce0,
        prototype_V_d0 => dataflow_in_loop_lea_U0_prototype_V_d0,
        prototype_V_q0 => ap_const_lv64_0,
        prototype_V_we0 => dataflow_in_loop_lea_U0_prototype_V_we0,
        prototype_V_address1 => dataflow_in_loop_lea_U0_prototype_V_address1,
        prototype_V_ce1 => dataflow_in_loop_lea_U0_prototype_V_ce1,
        prototype_V_d1 => dataflow_in_loop_lea_U0_prototype_V_d1,
        prototype_V_q1 => ap_const_lv64_0,
        prototype_V_we1 => dataflow_in_loop_lea_U0_prototype_V_we1,
        prototypeCounter_V_address0 => dataflow_in_loop_lea_U0_prototypeCounter_V_address0,
        prototypeCounter_V_ce0 => dataflow_in_loop_lea_U0_prototypeCounter_V_ce0,
        prototypeCounter_V_d0 => dataflow_in_loop_lea_U0_prototypeCounter_V_d0,
        prototypeCounter_V_q0 => ap_const_lv32_0,
        prototypeCounter_V_we0 => dataflow_in_loop_lea_U0_prototypeCounter_V_we0,
        prototypeCounter_V_address1 => dataflow_in_loop_lea_U0_prototypeCounter_V_address1,
        prototypeCounter_V_ce1 => dataflow_in_loop_lea_U0_prototypeCounter_V_ce1,
        prototypeCounter_V_d1 => dataflow_in_loop_lea_U0_prototypeCounter_V_d1,
        prototypeCounter_V_q1 => ap_const_lv32_0,
        prototypeCounter_V_we1 => dataflow_in_loop_lea_U0_prototypeCounter_V_we1,
        p_0510_0_ap_vld => ap_const_logic_0,
        ap_start => dataflow_in_loop_lea_U0_ap_start,
        ap_done => dataflow_in_loop_lea_U0_ap_done,
        ap_ready => dataflow_in_loop_lea_U0_ap_ready,
        ap_idle => dataflow_in_loop_lea_U0_ap_idle,
        ap_continue => dataflow_in_loop_lea_U0_ap_continue);





    loop_dataflow_input_count_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                loop_dataflow_input_count <= ap_const_lv5_0;
            else
                if ((not((loop_dataflow_input_count = bound_minus_1)) and (ap_start = ap_const_logic_1) and (dataflow_in_loop_lea_U0_ap_ready = ap_const_logic_1))) then 
                    loop_dataflow_input_count <= std_logic_vector(unsigned(loop_dataflow_input_count) + unsigned(ap_const_lv5_1));
                elsif (((loop_dataflow_input_count = bound_minus_1) and (ap_start = ap_const_logic_1) and (dataflow_in_loop_lea_U0_ap_ready = ap_const_logic_1))) then 
                    loop_dataflow_input_count <= ap_const_lv5_0;
                end if; 
            end if;
        end if;
    end process;


    loop_dataflow_output_count_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                loop_dataflow_output_count <= ap_const_lv5_0;
            else
                if ((not((loop_dataflow_output_count = bound_minus_1)) and (dataflow_in_loop_lea_U0_ap_continue = ap_const_logic_1) and (dataflow_in_loop_lea_U0_ap_done = ap_const_logic_1))) then 
                    loop_dataflow_output_count <= std_logic_vector(unsigned(loop_dataflow_output_count) + unsigned(ap_const_lv5_1));
                elsif (((loop_dataflow_output_count = bound_minus_1) and (dataflow_in_loop_lea_U0_ap_continue = ap_const_logic_1) and (dataflow_in_loop_lea_U0_ap_done = ap_const_logic_1))) then 
                    loop_dataflow_output_count <= ap_const_lv5_0;
                end if; 
            end if;
        end if;
    end process;


    ap_done_assign_proc : process(dataflow_in_loop_lea_U0_ap_done, loop_dataflow_output_count, bound_minus_1)
    begin
        if (((loop_dataflow_output_count = bound_minus_1) and (dataflow_in_loop_lea_U0_ap_done = ap_const_logic_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(dataflow_in_loop_lea_U0_ap_idle, ap_start, loop_dataflow_output_count)
    begin
        if (((ap_start = ap_const_logic_0) and (loop_dataflow_output_count = ap_const_lv5_0) and (dataflow_in_loop_lea_U0_ap_idle = ap_const_logic_1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(dataflow_in_loop_lea_U0_ap_ready, ap_start, loop_dataflow_input_count, bound_minus_1)
    begin
        if (((loop_dataflow_input_count = bound_minus_1) and (ap_start = ap_const_logic_1) and (dataflow_in_loop_lea_U0_ap_ready = ap_const_logic_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ap_sync_continue <= ap_continue;
    ap_sync_done <= dataflow_in_loop_lea_U0_ap_done;
    ap_sync_ready <= dataflow_in_loop_lea_U0_ap_ready;
    bound_minus_1 <= std_logic_vector(unsigned(ap_const_lv5_1A) - unsigned(ap_const_lv5_1));
    compute1_V_address0 <= dataflow_in_loop_lea_U0_compute1_V_address0;
    compute1_V_address1 <= ap_const_lv5_0;
    compute1_V_ce0 <= dataflow_in_loop_lea_U0_compute1_V_ce0;
    compute1_V_ce1 <= ap_const_logic_0;
    compute1_V_d0 <= dataflow_in_loop_lea_U0_compute1_V_d0;
    compute1_V_d1 <= ap_const_lv32_0;
    compute1_V_we0 <= dataflow_in_loop_lea_U0_compute1_V_we0;
    compute1_V_we1 <= ap_const_logic_0;

    dataflow_in_loop_lea_U0_ap_continue_assign_proc : process(ap_continue, loop_dataflow_output_count, bound_minus_1)
    begin
        if ((not((loop_dataflow_output_count = bound_minus_1)) or (ap_continue = ap_const_logic_1))) then 
            dataflow_in_loop_lea_U0_ap_continue <= ap_const_logic_1;
        else 
            dataflow_in_loop_lea_U0_ap_continue <= ap_const_logic_0;
        end if; 
    end process;

    dataflow_in_loop_lea_U0_ap_start <= ap_start;
    dataflow_in_loop_lea_U0_start_full_n <= ap_const_logic_1;
    dataflow_in_loop_lea_U0_start_write <= ap_const_logic_0;
    hcl_in_train_V_address0 <= dataflow_in_loop_lea_U0_hcl_in_train_V_address0;
    hcl_in_train_V_address1 <= ap_const_lv20_0;
    hcl_in_train_V_ce0 <= dataflow_in_loop_lea_U0_hcl_in_train_V_ce0;
    hcl_in_train_V_ce1 <= ap_const_logic_0;
    hcl_in_train_V_d0 <= ap_const_lv64_0;
    hcl_in_train_V_d1 <= ap_const_lv64_0;
    hcl_in_train_V_we0 <= ap_const_logic_0;
    hcl_in_train_V_we1 <= ap_const_logic_0;
    hcl_rdv3_V_address0 <= dataflow_in_loop_lea_U0_hcl_rdv3_V_address0;
    hcl_rdv3_V_address1 <= ap_const_lv18_0;
    hcl_rdv3_V_ce0 <= dataflow_in_loop_lea_U0_hcl_rdv3_V_ce0;
    hcl_rdv3_V_ce1 <= ap_const_logic_0;
    hcl_rdv3_V_d0 <= ap_const_lv64_0;
    hcl_rdv3_V_d1 <= ap_const_lv64_0;
    hcl_rdv3_V_we0 <= ap_const_logic_0;
    hcl_rdv3_V_we1 <= ap_const_logic_0;
    hcl_trainLabels_V_address0 <= dataflow_in_loop_lea_U0_hcl_trainLabels_V_address0;
    hcl_trainLabels_V_address1 <= ap_const_lv13_0;
    hcl_trainLabels_V_ce0 <= dataflow_in_loop_lea_U0_hcl_trainLabels_V_ce0;
    hcl_trainLabels_V_ce1 <= ap_const_logic_0;
    hcl_trainLabels_V_d0 <= ap_const_lv32_0;
    hcl_trainLabels_V_d1 <= ap_const_lv32_0;
    hcl_trainLabels_V_we0 <= ap_const_logic_0;
    hcl_trainLabels_V_we1 <= ap_const_logic_0;
    prototypeCounter_V_address0 <= dataflow_in_loop_lea_U0_prototypeCounter_V_address0;
    prototypeCounter_V_address1 <= ap_const_lv18_0;
    prototypeCounter_V_ce0 <= dataflow_in_loop_lea_U0_prototypeCounter_V_ce0;
    prototypeCounter_V_ce1 <= ap_const_logic_0;
    prototypeCounter_V_d0 <= dataflow_in_loop_lea_U0_prototypeCounter_V_d0;
    prototypeCounter_V_d1 <= ap_const_lv32_0;
    prototypeCounter_V_we0 <= dataflow_in_loop_lea_U0_prototypeCounter_V_we0;
    prototypeCounter_V_we1 <= ap_const_logic_0;
    prototype_V_address0 <= dataflow_in_loop_lea_U0_prototype_V_address0;
    prototype_V_address1 <= ap_const_lv12_0;
    prototype_V_ce0 <= dataflow_in_loop_lea_U0_prototype_V_ce0;
    prototype_V_ce1 <= ap_const_logic_0;
    prototype_V_d0 <= dataflow_in_loop_lea_U0_prototype_V_d0;
    prototype_V_d1 <= ap_const_lv64_0;
    prototype_V_we0 <= dataflow_in_loop_lea_U0_prototype_V_we0;
    prototype_V_we1 <= ap_const_logic_0;
end behav;
