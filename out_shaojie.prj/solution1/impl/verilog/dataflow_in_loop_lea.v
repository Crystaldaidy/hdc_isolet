// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module dataflow_in_loop_lea (
        ap_clk,
        ap_rst,
        hcl_trainLabels_V_address0,
        hcl_trainLabels_V_ce0,
        hcl_trainLabels_V_d0,
        hcl_trainLabels_V_q0,
        hcl_trainLabels_V_we0,
        hcl_trainLabels_V_address1,
        hcl_trainLabels_V_ce1,
        hcl_trainLabels_V_d1,
        hcl_trainLabels_V_q1,
        hcl_trainLabels_V_we1,
        p_0510_0,
        hcl_in_train_V_address0,
        hcl_in_train_V_ce0,
        hcl_in_train_V_d0,
        hcl_in_train_V_q0,
        hcl_in_train_V_we0,
        hcl_in_train_V_address1,
        hcl_in_train_V_ce1,
        hcl_in_train_V_d1,
        hcl_in_train_V_q1,
        hcl_in_train_V_we1,
        compute1_V_address0,
        compute1_V_ce0,
        compute1_V_d0,
        compute1_V_q0,
        compute1_V_we0,
        compute1_V_address1,
        compute1_V_ce1,
        compute1_V_d1,
        compute1_V_q1,
        compute1_V_we1,
        hcl_rdv3_V_address0,
        hcl_rdv3_V_ce0,
        hcl_rdv3_V_d0,
        hcl_rdv3_V_q0,
        hcl_rdv3_V_we0,
        hcl_rdv3_V_address1,
        hcl_rdv3_V_ce1,
        hcl_rdv3_V_d1,
        hcl_rdv3_V_q1,
        hcl_rdv3_V_we1,
        prototype_V_address0,
        prototype_V_ce0,
        prototype_V_d0,
        prototype_V_q0,
        prototype_V_we0,
        prototype_V_address1,
        prototype_V_ce1,
        prototype_V_d1,
        prototype_V_q1,
        prototype_V_we1,
        prototypeCounter_V_address0,
        prototypeCounter_V_ce0,
        prototypeCounter_V_d0,
        prototypeCounter_V_q0,
        prototypeCounter_V_we0,
        prototypeCounter_V_address1,
        prototypeCounter_V_ce1,
        prototypeCounter_V_d1,
        prototypeCounter_V_q1,
        prototypeCounter_V_we1,
        p_0510_0_ap_vld,
        ap_start,
        ap_done,
        ap_ready,
        ap_idle,
        ap_continue
);


input   ap_clk;
input   ap_rst;
output  [12:0] hcl_trainLabels_V_address0;
output   hcl_trainLabels_V_ce0;
output  [31:0] hcl_trainLabels_V_d0;
input  [31:0] hcl_trainLabels_V_q0;
output   hcl_trainLabels_V_we0;
output  [12:0] hcl_trainLabels_V_address1;
output   hcl_trainLabels_V_ce1;
output  [31:0] hcl_trainLabels_V_d1;
input  [31:0] hcl_trainLabels_V_q1;
output   hcl_trainLabels_V_we1;
input  [4:0] p_0510_0;
output  [19:0] hcl_in_train_V_address0;
output   hcl_in_train_V_ce0;
output  [63:0] hcl_in_train_V_d0;
input  [63:0] hcl_in_train_V_q0;
output   hcl_in_train_V_we0;
output  [19:0] hcl_in_train_V_address1;
output   hcl_in_train_V_ce1;
output  [63:0] hcl_in_train_V_d1;
input  [63:0] hcl_in_train_V_q1;
output   hcl_in_train_V_we1;
output  [4:0] compute1_V_address0;
output   compute1_V_ce0;
output  [31:0] compute1_V_d0;
input  [31:0] compute1_V_q0;
output   compute1_V_we0;
output  [4:0] compute1_V_address1;
output   compute1_V_ce1;
output  [31:0] compute1_V_d1;
input  [31:0] compute1_V_q1;
output   compute1_V_we1;
output  [17:0] hcl_rdv3_V_address0;
output   hcl_rdv3_V_ce0;
output  [63:0] hcl_rdv3_V_d0;
input  [63:0] hcl_rdv3_V_q0;
output   hcl_rdv3_V_we0;
output  [17:0] hcl_rdv3_V_address1;
output   hcl_rdv3_V_ce1;
output  [63:0] hcl_rdv3_V_d1;
input  [63:0] hcl_rdv3_V_q1;
output   hcl_rdv3_V_we1;
output  [11:0] prototype_V_address0;
output   prototype_V_ce0;
output  [63:0] prototype_V_d0;
input  [63:0] prototype_V_q0;
output   prototype_V_we0;
output  [11:0] prototype_V_address1;
output   prototype_V_ce1;
output  [63:0] prototype_V_d1;
input  [63:0] prototype_V_q1;
output   prototype_V_we1;
output  [17:0] prototypeCounter_V_address0;
output   prototypeCounter_V_ce0;
output  [31:0] prototypeCounter_V_d0;
input  [31:0] prototypeCounter_V_q0;
output   prototypeCounter_V_we0;
output  [17:0] prototypeCounter_V_address1;
output   prototypeCounter_V_ce1;
output  [31:0] prototypeCounter_V_d1;
input  [31:0] prototypeCounter_V_q1;
output   prototypeCounter_V_we1;
input   p_0510_0_ap_vld;
input   ap_start;
output   ap_done;
output   ap_ready;
output   ap_idle;
input   ap_continue;

wire   [0:0] compute2_V_i_q0;
wire   [0:0] compute2_V_t_q0;
wire    match_x4_proc_U0_ap_start;
wire    match_x4_proc_U0_ap_done;
wire    match_x4_proc_U0_ap_continue;
wire    match_x4_proc_U0_ap_idle;
wire    match_x4_proc_U0_ap_ready;
wire   [12:0] match_x4_proc_U0_hcl_trainLabels_V_address0;
wire    match_x4_proc_U0_hcl_trainLabels_V_ce0;
wire   [4:0] match_x4_proc_U0_compute2_V1_address0;
wire    match_x4_proc_U0_compute2_V1_ce0;
wire    match_x4_proc_U0_compute2_V1_we0;
wire   [0:0] match_x4_proc_U0_compute2_V1_d0;
wire   [19:0] match_x4_proc_U0_hcl_in_train_V_address0;
wire    match_x4_proc_U0_hcl_in_train_V_ce0;
wire   [63:0] match_x4_proc_U0_match2_din;
wire    match_x4_proc_U0_match2_write;
wire   [4:0] match_x4_proc_U0_p_0510_0_out_din;
wire    match_x4_proc_U0_p_0510_0_out_write;
wire    ap_channel_done_compute2_V;
wire    match_x4_proc_U0_compute2_V1_full_n;
wire    i2_proc_U0_ap_start;
wire    i2_proc_U0_ap_done;
wire    i2_proc_U0_ap_continue;
wire    i2_proc_U0_ap_idle;
wire    i2_proc_U0_ap_ready;
wire   [4:0] i2_proc_U0_compute2_V1_address0;
wire    i2_proc_U0_compute2_V1_ce0;
wire    i2_proc_U0_p_0510_0_read;
wire   [4:0] i2_proc_U0_compute1_V_address0;
wire    i2_proc_U0_compute1_V_ce0;
wire    i2_proc_U0_compute1_V_we0;
wire   [31:0] i2_proc_U0_compute1_V_d0;
wire    i2_proc_U0_match2_read;
wire   [17:0] i2_proc_U0_hcl_rdv3_V_address0;
wire    i2_proc_U0_hcl_rdv3_V_ce0;
wire   [11:0] i2_proc_U0_prototype_V_address0;
wire    i2_proc_U0_prototype_V_ce0;
wire   [7:0] i2_proc_U0_prototype_V_we0;
wire   [63:0] i2_proc_U0_prototype_V_d0;
wire   [17:0] i2_proc_U0_prototypeCounter_V_address0;
wire    i2_proc_U0_prototypeCounter_V_ce0;
wire    i2_proc_U0_prototypeCounter_V_we0;
wire   [31:0] i2_proc_U0_prototypeCounter_V_d0;
wire    ap_sync_continue;
wire    compute2_V_i_full_n;
wire    compute2_V_t_empty_n;
wire    match2_channel_full_n;
wire   [63:0] match2_channel_dout;
wire    match2_channel_empty_n;
wire    p_0510_0_c_full_n;
wire   [4:0] p_0510_0_c_dout;
wire    p_0510_0_c_empty_n;
wire    ap_sync_done;
wire    ap_sync_ready;
reg    ap_sync_reg_match_x4_proc_U0_ap_ready;
wire    ap_sync_match_x4_proc_U0_ap_ready;
reg   [1:0] match_x4_proc_U0_ap_ready_count;
reg    ap_sync_reg_i2_proc_U0_ap_ready;
wire    ap_sync_i2_proc_U0_ap_ready;
reg   [1:0] i2_proc_U0_ap_ready_count;
wire    match_x4_proc_U0_start_full_n;
wire    match_x4_proc_U0_start_write;
wire    i2_proc_U0_start_full_n;
wire    i2_proc_U0_start_write;

// power-on initialization
initial begin
#0 ap_sync_reg_match_x4_proc_U0_ap_ready = 1'b0;
#0 match_x4_proc_U0_ap_ready_count = 2'd0;
#0 ap_sync_reg_i2_proc_U0_ap_ready = 1'b0;
#0 i2_proc_U0_ap_ready_count = 2'd0;
end

dataflow_in_loop_dEe #(
    .DataWidth( 1 ),
    .AddressRange( 26 ),
    .AddressWidth( 5 ))
compute2_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .i_address0(match_x4_proc_U0_compute2_V1_address0),
    .i_ce0(match_x4_proc_U0_compute2_V1_ce0),
    .i_we0(match_x4_proc_U0_compute2_V1_we0),
    .i_d0(match_x4_proc_U0_compute2_V1_d0),
    .i_q0(compute2_V_i_q0),
    .t_address0(i2_proc_U0_compute2_V1_address0),
    .t_ce0(i2_proc_U0_compute2_V1_ce0),
    .t_we0(1'b0),
    .t_d0(1'd0),
    .t_q0(compute2_V_t_q0),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(compute2_V_i_full_n),
    .i_write(match_x4_proc_U0_ap_done),
    .t_empty_n(compute2_V_t_empty_n),
    .t_read(i2_proc_U0_ap_ready)
);

match_x4_proc match_x4_proc_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(match_x4_proc_U0_ap_start),
    .ap_done(match_x4_proc_U0_ap_done),
    .ap_continue(match_x4_proc_U0_ap_continue),
    .ap_idle(match_x4_proc_U0_ap_idle),
    .ap_ready(match_x4_proc_U0_ap_ready),
    .hcl_trainLabels_V_address0(match_x4_proc_U0_hcl_trainLabels_V_address0),
    .hcl_trainLabels_V_ce0(match_x4_proc_U0_hcl_trainLabels_V_ce0),
    .hcl_trainLabels_V_q0(hcl_trainLabels_V_q0),
    .compute2_V1_address0(match_x4_proc_U0_compute2_V1_address0),
    .compute2_V1_ce0(match_x4_proc_U0_compute2_V1_ce0),
    .compute2_V1_we0(match_x4_proc_U0_compute2_V1_we0),
    .compute2_V1_d0(match_x4_proc_U0_compute2_V1_d0),
    .p_0510_0(p_0510_0),
    .hcl_in_train_V_address0(match_x4_proc_U0_hcl_in_train_V_address0),
    .hcl_in_train_V_ce0(match_x4_proc_U0_hcl_in_train_V_ce0),
    .hcl_in_train_V_q0(hcl_in_train_V_q0),
    .match2_din(match_x4_proc_U0_match2_din),
    .match2_full_n(match2_channel_full_n),
    .match2_write(match_x4_proc_U0_match2_write),
    .p_0510_0_out_din(match_x4_proc_U0_p_0510_0_out_din),
    .p_0510_0_out_full_n(p_0510_0_c_full_n),
    .p_0510_0_out_write(match_x4_proc_U0_p_0510_0_out_write)
);

i2_proc i2_proc_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(i2_proc_U0_ap_start),
    .ap_done(i2_proc_U0_ap_done),
    .ap_continue(i2_proc_U0_ap_continue),
    .ap_idle(i2_proc_U0_ap_idle),
    .ap_ready(i2_proc_U0_ap_ready),
    .compute2_V1_address0(i2_proc_U0_compute2_V1_address0),
    .compute2_V1_ce0(i2_proc_U0_compute2_V1_ce0),
    .compute2_V1_q0(compute2_V_t_q0),
    .p_0510_0_dout(p_0510_0_c_dout),
    .p_0510_0_empty_n(p_0510_0_c_empty_n),
    .p_0510_0_read(i2_proc_U0_p_0510_0_read),
    .compute1_V_address0(i2_proc_U0_compute1_V_address0),
    .compute1_V_ce0(i2_proc_U0_compute1_V_ce0),
    .compute1_V_we0(i2_proc_U0_compute1_V_we0),
    .compute1_V_d0(i2_proc_U0_compute1_V_d0),
    .match2_dout(match2_channel_dout),
    .match2_empty_n(match2_channel_empty_n),
    .match2_read(i2_proc_U0_match2_read),
    .hcl_rdv3_V_address0(i2_proc_U0_hcl_rdv3_V_address0),
    .hcl_rdv3_V_ce0(i2_proc_U0_hcl_rdv3_V_ce0),
    .hcl_rdv3_V_q0(hcl_rdv3_V_q0),
    .prototype_V_address0(i2_proc_U0_prototype_V_address0),
    .prototype_V_ce0(i2_proc_U0_prototype_V_ce0),
    .prototype_V_we0(i2_proc_U0_prototype_V_we0),
    .prototype_V_d0(i2_proc_U0_prototype_V_d0),
    .prototypeCounter_V_address0(i2_proc_U0_prototypeCounter_V_address0),
    .prototypeCounter_V_ce0(i2_proc_U0_prototypeCounter_V_ce0),
    .prototypeCounter_V_we0(i2_proc_U0_prototypeCounter_V_we0),
    .prototypeCounter_V_d0(i2_proc_U0_prototypeCounter_V_d0)
);

fifo_w64_d6238_A match2_channel_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(match_x4_proc_U0_match2_din),
    .if_full_n(match2_channel_full_n),
    .if_write(match_x4_proc_U0_match2_write),
    .if_dout(match2_channel_dout),
    .if_empty_n(match2_channel_empty_n),
    .if_read(i2_proc_U0_match2_read)
);

fifo_w5_d2_A p_0510_0_c_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(match_x4_proc_U0_p_0510_0_out_din),
    .if_full_n(p_0510_0_c_full_n),
    .if_write(match_x4_proc_U0_p_0510_0_out_write),
    .if_dout(p_0510_0_c_dout),
    .if_empty_n(p_0510_0_c_empty_n),
    .if_read(i2_proc_U0_p_0510_0_read)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_i2_proc_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_i2_proc_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_i2_proc_U0_ap_ready <= ap_sync_i2_proc_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_match_x4_proc_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_match_x4_proc_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_match_x4_proc_U0_ap_ready <= ap_sync_match_x4_proc_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((i2_proc_U0_ap_ready == 1'b0) & (ap_sync_ready == 1'b1))) begin
        i2_proc_U0_ap_ready_count <= (i2_proc_U0_ap_ready_count - 2'd1);
    end else if (((ap_sync_ready == 1'b0) & (i2_proc_U0_ap_ready == 1'b1))) begin
        i2_proc_U0_ap_ready_count <= (i2_proc_U0_ap_ready_count + 2'd1);
    end
end

always @ (posedge ap_clk) begin
    if (((match_x4_proc_U0_ap_ready == 1'b0) & (ap_sync_ready == 1'b1))) begin
        match_x4_proc_U0_ap_ready_count <= (match_x4_proc_U0_ap_ready_count - 2'd1);
    end else if (((ap_sync_ready == 1'b0) & (match_x4_proc_U0_ap_ready == 1'b1))) begin
        match_x4_proc_U0_ap_ready_count <= (match_x4_proc_U0_ap_ready_count + 2'd1);
    end
end

assign ap_channel_done_compute2_V = match_x4_proc_U0_ap_done;

assign ap_done = i2_proc_U0_ap_done;

assign ap_idle = (match_x4_proc_U0_ap_idle & i2_proc_U0_ap_idle & (compute2_V_t_empty_n ^ 1'b1));

assign ap_ready = ap_sync_ready;

assign ap_sync_continue = ap_continue;

assign ap_sync_done = i2_proc_U0_ap_done;

assign ap_sync_i2_proc_U0_ap_ready = (i2_proc_U0_ap_ready | ap_sync_reg_i2_proc_U0_ap_ready);

assign ap_sync_match_x4_proc_U0_ap_ready = (match_x4_proc_U0_ap_ready | ap_sync_reg_match_x4_proc_U0_ap_ready);

assign ap_sync_ready = (ap_sync_match_x4_proc_U0_ap_ready & ap_sync_i2_proc_U0_ap_ready);

assign compute1_V_address0 = i2_proc_U0_compute1_V_address0;

assign compute1_V_address1 = 5'd0;

assign compute1_V_ce0 = i2_proc_U0_compute1_V_ce0;

assign compute1_V_ce1 = 1'b0;

assign compute1_V_d0 = i2_proc_U0_compute1_V_d0;

assign compute1_V_d1 = 32'd0;

assign compute1_V_we0 = i2_proc_U0_compute1_V_we0;

assign compute1_V_we1 = 1'b0;

assign hcl_in_train_V_address0 = match_x4_proc_U0_hcl_in_train_V_address0;

assign hcl_in_train_V_address1 = 20'd0;

assign hcl_in_train_V_ce0 = match_x4_proc_U0_hcl_in_train_V_ce0;

assign hcl_in_train_V_ce1 = 1'b0;

assign hcl_in_train_V_d0 = 64'd0;

assign hcl_in_train_V_d1 = 64'd0;

assign hcl_in_train_V_we0 = 1'b0;

assign hcl_in_train_V_we1 = 1'b0;

assign hcl_rdv3_V_address0 = i2_proc_U0_hcl_rdv3_V_address0;

assign hcl_rdv3_V_address1 = 18'd0;

assign hcl_rdv3_V_ce0 = i2_proc_U0_hcl_rdv3_V_ce0;

assign hcl_rdv3_V_ce1 = 1'b0;

assign hcl_rdv3_V_d0 = 64'd0;

assign hcl_rdv3_V_d1 = 64'd0;

assign hcl_rdv3_V_we0 = 1'b0;

assign hcl_rdv3_V_we1 = 1'b0;

assign hcl_trainLabels_V_address0 = match_x4_proc_U0_hcl_trainLabels_V_address0;

assign hcl_trainLabels_V_address1 = 13'd0;

assign hcl_trainLabels_V_ce0 = match_x4_proc_U0_hcl_trainLabels_V_ce0;

assign hcl_trainLabels_V_ce1 = 1'b0;

assign hcl_trainLabels_V_d0 = 32'd0;

assign hcl_trainLabels_V_d1 = 32'd0;

assign hcl_trainLabels_V_we0 = 1'b0;

assign hcl_trainLabels_V_we1 = 1'b0;

assign i2_proc_U0_ap_continue = ap_continue;

assign i2_proc_U0_ap_start = ((ap_sync_reg_i2_proc_U0_ap_ready ^ 1'b1) & compute2_V_t_empty_n & ap_start);

assign i2_proc_U0_start_full_n = 1'b1;

assign i2_proc_U0_start_write = 1'b0;

assign match_x4_proc_U0_ap_continue = compute2_V_i_full_n;

assign match_x4_proc_U0_ap_start = ((ap_sync_reg_match_x4_proc_U0_ap_ready ^ 1'b1) & ap_start);

assign match_x4_proc_U0_compute2_V1_full_n = compute2_V_i_full_n;

assign match_x4_proc_U0_start_full_n = 1'b1;

assign match_x4_proc_U0_start_write = 1'b0;

assign prototypeCounter_V_address0 = i2_proc_U0_prototypeCounter_V_address0;

assign prototypeCounter_V_address1 = 18'd0;

assign prototypeCounter_V_ce0 = i2_proc_U0_prototypeCounter_V_ce0;

assign prototypeCounter_V_ce1 = 1'b0;

assign prototypeCounter_V_d0 = i2_proc_U0_prototypeCounter_V_d0;

assign prototypeCounter_V_d1 = 32'd0;

assign prototypeCounter_V_we0 = i2_proc_U0_prototypeCounter_V_we0;

assign prototypeCounter_V_we1 = 1'b0;

assign prototype_V_address0 = i2_proc_U0_prototype_V_address0;

assign prototype_V_address1 = 12'd0;

assign prototype_V_ce0 = i2_proc_U0_prototype_V_ce0;

assign prototype_V_ce1 = 1'b0;

assign prototype_V_d0 = i2_proc_U0_prototype_V_d0;

assign prototype_V_d1 = 64'd0;

assign prototype_V_we0 = i2_proc_U0_prototype_V_we0;

assign prototype_V_we1 = 1'b0;

endmodule //dataflow_in_loop_lea
