// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module dataflow_parent_loop_1 (
        hcl_trainLabels_V_address0,
        hcl_trainLabels_V_ce0,
        hcl_trainLabels_V_d0,
        hcl_trainLabels_V_q0,
        hcl_trainLabels_V_we0,
        hcl_trainLabels_V_address1,
        hcl_trainLabels_V_ce1,
        hcl_trainLabels_V_d1,
        hcl_trainLabels_V_q1,
        hcl_trainLabels_V_we1,
        hcl_in_train_V_address0,
        hcl_in_train_V_ce0,
        hcl_in_train_V_d0,
        hcl_in_train_V_q0,
        hcl_in_train_V_we0,
        hcl_in_train_V_address1,
        hcl_in_train_V_ce1,
        hcl_in_train_V_d1,
        hcl_in_train_V_q1,
        hcl_in_train_V_we1,
        compute1_V_address0,
        compute1_V_ce0,
        compute1_V_d0,
        compute1_V_q0,
        compute1_V_we0,
        compute1_V_address1,
        compute1_V_ce1,
        compute1_V_d1,
        compute1_V_q1,
        compute1_V_we1,
        hcl_rdv3_V_address0,
        hcl_rdv3_V_ce0,
        hcl_rdv3_V_d0,
        hcl_rdv3_V_q0,
        hcl_rdv3_V_we0,
        hcl_rdv3_V_address1,
        hcl_rdv3_V_ce1,
        hcl_rdv3_V_d1,
        hcl_rdv3_V_q1,
        hcl_rdv3_V_we1,
        prototype_V_address0,
        prototype_V_ce0,
        prototype_V_d0,
        prototype_V_q0,
        prototype_V_we0,
        prototype_V_address1,
        prototype_V_ce1,
        prototype_V_d1,
        prototype_V_q1,
        prototype_V_we1,
        prototypeCounter_V_address0,
        prototypeCounter_V_ce0,
        prototypeCounter_V_d0,
        prototypeCounter_V_q0,
        prototypeCounter_V_we0,
        prototypeCounter_V_address1,
        prototypeCounter_V_ce1,
        prototypeCounter_V_d1,
        prototypeCounter_V_q1,
        prototypeCounter_V_we1,
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_ready,
        ap_idle,
        ap_continue
);


output  [12:0] hcl_trainLabels_V_address0;
output   hcl_trainLabels_V_ce0;
output  [31:0] hcl_trainLabels_V_d0;
input  [31:0] hcl_trainLabels_V_q0;
output   hcl_trainLabels_V_we0;
output  [12:0] hcl_trainLabels_V_address1;
output   hcl_trainLabels_V_ce1;
output  [31:0] hcl_trainLabels_V_d1;
input  [31:0] hcl_trainLabels_V_q1;
output   hcl_trainLabels_V_we1;
output  [19:0] hcl_in_train_V_address0;
output   hcl_in_train_V_ce0;
output  [63:0] hcl_in_train_V_d0;
input  [63:0] hcl_in_train_V_q0;
output   hcl_in_train_V_we0;
output  [19:0] hcl_in_train_V_address1;
output   hcl_in_train_V_ce1;
output  [63:0] hcl_in_train_V_d1;
input  [63:0] hcl_in_train_V_q1;
output   hcl_in_train_V_we1;
output  [4:0] compute1_V_address0;
output   compute1_V_ce0;
output  [31:0] compute1_V_d0;
input  [31:0] compute1_V_q0;
output   compute1_V_we0;
output  [4:0] compute1_V_address1;
output   compute1_V_ce1;
output  [31:0] compute1_V_d1;
input  [31:0] compute1_V_q1;
output   compute1_V_we1;
output  [17:0] hcl_rdv3_V_address0;
output   hcl_rdv3_V_ce0;
output  [63:0] hcl_rdv3_V_d0;
input  [63:0] hcl_rdv3_V_q0;
output   hcl_rdv3_V_we0;
output  [17:0] hcl_rdv3_V_address1;
output   hcl_rdv3_V_ce1;
output  [63:0] hcl_rdv3_V_d1;
input  [63:0] hcl_rdv3_V_q1;
output   hcl_rdv3_V_we1;
output  [11:0] prototype_V_address0;
output   prototype_V_ce0;
output  [63:0] prototype_V_d0;
input  [63:0] prototype_V_q0;
output   prototype_V_we0;
output  [11:0] prototype_V_address1;
output   prototype_V_ce1;
output  [63:0] prototype_V_d1;
input  [63:0] prototype_V_q1;
output   prototype_V_we1;
output  [17:0] prototypeCounter_V_address0;
output   prototypeCounter_V_ce0;
output  [31:0] prototypeCounter_V_d0;
input  [31:0] prototypeCounter_V_q0;
output   prototypeCounter_V_we0;
output  [17:0] prototypeCounter_V_address1;
output   prototypeCounter_V_ce1;
output  [31:0] prototypeCounter_V_d1;
input  [31:0] prototypeCounter_V_q1;
output   prototypeCounter_V_we1;
input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_ready;
output   ap_idle;
input   ap_continue;

reg ap_done;
reg ap_ready;
reg ap_idle;

wire   [12:0] dataflow_in_loop_lea_U0_hcl_trainLabels_V_address0;
wire    dataflow_in_loop_lea_U0_hcl_trainLabels_V_ce0;
wire   [31:0] dataflow_in_loop_lea_U0_hcl_trainLabels_V_d0;
wire    dataflow_in_loop_lea_U0_hcl_trainLabels_V_we0;
wire   [12:0] dataflow_in_loop_lea_U0_hcl_trainLabels_V_address1;
wire    dataflow_in_loop_lea_U0_hcl_trainLabels_V_ce1;
wire   [31:0] dataflow_in_loop_lea_U0_hcl_trainLabels_V_d1;
wire    dataflow_in_loop_lea_U0_hcl_trainLabels_V_we1;
wire   [19:0] dataflow_in_loop_lea_U0_hcl_in_train_V_address0;
wire    dataflow_in_loop_lea_U0_hcl_in_train_V_ce0;
wire   [63:0] dataflow_in_loop_lea_U0_hcl_in_train_V_d0;
wire    dataflow_in_loop_lea_U0_hcl_in_train_V_we0;
wire   [19:0] dataflow_in_loop_lea_U0_hcl_in_train_V_address1;
wire    dataflow_in_loop_lea_U0_hcl_in_train_V_ce1;
wire   [63:0] dataflow_in_loop_lea_U0_hcl_in_train_V_d1;
wire    dataflow_in_loop_lea_U0_hcl_in_train_V_we1;
wire   [4:0] dataflow_in_loop_lea_U0_compute1_V_address0;
wire    dataflow_in_loop_lea_U0_compute1_V_ce0;
wire   [31:0] dataflow_in_loop_lea_U0_compute1_V_d0;
wire    dataflow_in_loop_lea_U0_compute1_V_we0;
wire   [4:0] dataflow_in_loop_lea_U0_compute1_V_address1;
wire    dataflow_in_loop_lea_U0_compute1_V_ce1;
wire   [31:0] dataflow_in_loop_lea_U0_compute1_V_d1;
wire    dataflow_in_loop_lea_U0_compute1_V_we1;
wire   [17:0] dataflow_in_loop_lea_U0_hcl_rdv3_V_address0;
wire    dataflow_in_loop_lea_U0_hcl_rdv3_V_ce0;
wire   [63:0] dataflow_in_loop_lea_U0_hcl_rdv3_V_d0;
wire    dataflow_in_loop_lea_U0_hcl_rdv3_V_we0;
wire   [17:0] dataflow_in_loop_lea_U0_hcl_rdv3_V_address1;
wire    dataflow_in_loop_lea_U0_hcl_rdv3_V_ce1;
wire   [63:0] dataflow_in_loop_lea_U0_hcl_rdv3_V_d1;
wire    dataflow_in_loop_lea_U0_hcl_rdv3_V_we1;
wire   [11:0] dataflow_in_loop_lea_U0_prototype_V_address0;
wire    dataflow_in_loop_lea_U0_prototype_V_ce0;
wire   [63:0] dataflow_in_loop_lea_U0_prototype_V_d0;
wire    dataflow_in_loop_lea_U0_prototype_V_we0;
wire   [11:0] dataflow_in_loop_lea_U0_prototype_V_address1;
wire    dataflow_in_loop_lea_U0_prototype_V_ce1;
wire   [63:0] dataflow_in_loop_lea_U0_prototype_V_d1;
wire    dataflow_in_loop_lea_U0_prototype_V_we1;
wire   [17:0] dataflow_in_loop_lea_U0_prototypeCounter_V_address0;
wire    dataflow_in_loop_lea_U0_prototypeCounter_V_ce0;
wire   [31:0] dataflow_in_loop_lea_U0_prototypeCounter_V_d0;
wire    dataflow_in_loop_lea_U0_prototypeCounter_V_we0;
wire   [17:0] dataflow_in_loop_lea_U0_prototypeCounter_V_address1;
wire    dataflow_in_loop_lea_U0_prototypeCounter_V_ce1;
wire   [31:0] dataflow_in_loop_lea_U0_prototypeCounter_V_d1;
wire    dataflow_in_loop_lea_U0_prototypeCounter_V_we1;
wire    dataflow_in_loop_lea_U0_ap_start;
wire    dataflow_in_loop_lea_U0_ap_done;
wire    dataflow_in_loop_lea_U0_ap_ready;
wire    dataflow_in_loop_lea_U0_ap_idle;
reg    dataflow_in_loop_lea_U0_ap_continue;
wire    ap_sync_continue;
wire    ap_sync_done;
wire    ap_sync_ready;
reg   [4:0] loop_dataflow_input_count;
reg   [4:0] loop_dataflow_output_count;
wire   [4:0] bound_minus_1;
wire    dataflow_in_loop_lea_U0_start_full_n;
wire    dataflow_in_loop_lea_U0_start_write;

// power-on initialization
initial begin
#0 loop_dataflow_input_count = 5'd0;
#0 loop_dataflow_output_count = 5'd0;
end

dataflow_in_loop_lea dataflow_in_loop_lea_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .hcl_trainLabels_V_address0(dataflow_in_loop_lea_U0_hcl_trainLabels_V_address0),
    .hcl_trainLabels_V_ce0(dataflow_in_loop_lea_U0_hcl_trainLabels_V_ce0),
    .hcl_trainLabels_V_d0(dataflow_in_loop_lea_U0_hcl_trainLabels_V_d0),
    .hcl_trainLabels_V_q0(hcl_trainLabels_V_q0),
    .hcl_trainLabels_V_we0(dataflow_in_loop_lea_U0_hcl_trainLabels_V_we0),
    .hcl_trainLabels_V_address1(dataflow_in_loop_lea_U0_hcl_trainLabels_V_address1),
    .hcl_trainLabels_V_ce1(dataflow_in_loop_lea_U0_hcl_trainLabels_V_ce1),
    .hcl_trainLabels_V_d1(dataflow_in_loop_lea_U0_hcl_trainLabels_V_d1),
    .hcl_trainLabels_V_q1(32'd0),
    .hcl_trainLabels_V_we1(dataflow_in_loop_lea_U0_hcl_trainLabels_V_we1),
    .p_0510_0(loop_dataflow_input_count),
    .hcl_in_train_V_address0(dataflow_in_loop_lea_U0_hcl_in_train_V_address0),
    .hcl_in_train_V_ce0(dataflow_in_loop_lea_U0_hcl_in_train_V_ce0),
    .hcl_in_train_V_d0(dataflow_in_loop_lea_U0_hcl_in_train_V_d0),
    .hcl_in_train_V_q0(hcl_in_train_V_q0),
    .hcl_in_train_V_we0(dataflow_in_loop_lea_U0_hcl_in_train_V_we0),
    .hcl_in_train_V_address1(dataflow_in_loop_lea_U0_hcl_in_train_V_address1),
    .hcl_in_train_V_ce1(dataflow_in_loop_lea_U0_hcl_in_train_V_ce1),
    .hcl_in_train_V_d1(dataflow_in_loop_lea_U0_hcl_in_train_V_d1),
    .hcl_in_train_V_q1(64'd0),
    .hcl_in_train_V_we1(dataflow_in_loop_lea_U0_hcl_in_train_V_we1),
    .compute1_V_address0(dataflow_in_loop_lea_U0_compute1_V_address0),
    .compute1_V_ce0(dataflow_in_loop_lea_U0_compute1_V_ce0),
    .compute1_V_d0(dataflow_in_loop_lea_U0_compute1_V_d0),
    .compute1_V_q0(32'd0),
    .compute1_V_we0(dataflow_in_loop_lea_U0_compute1_V_we0),
    .compute1_V_address1(dataflow_in_loop_lea_U0_compute1_V_address1),
    .compute1_V_ce1(dataflow_in_loop_lea_U0_compute1_V_ce1),
    .compute1_V_d1(dataflow_in_loop_lea_U0_compute1_V_d1),
    .compute1_V_q1(32'd0),
    .compute1_V_we1(dataflow_in_loop_lea_U0_compute1_V_we1),
    .hcl_rdv3_V_address0(dataflow_in_loop_lea_U0_hcl_rdv3_V_address0),
    .hcl_rdv3_V_ce0(dataflow_in_loop_lea_U0_hcl_rdv3_V_ce0),
    .hcl_rdv3_V_d0(dataflow_in_loop_lea_U0_hcl_rdv3_V_d0),
    .hcl_rdv3_V_q0(hcl_rdv3_V_q0),
    .hcl_rdv3_V_we0(dataflow_in_loop_lea_U0_hcl_rdv3_V_we0),
    .hcl_rdv3_V_address1(dataflow_in_loop_lea_U0_hcl_rdv3_V_address1),
    .hcl_rdv3_V_ce1(dataflow_in_loop_lea_U0_hcl_rdv3_V_ce1),
    .hcl_rdv3_V_d1(dataflow_in_loop_lea_U0_hcl_rdv3_V_d1),
    .hcl_rdv3_V_q1(64'd0),
    .hcl_rdv3_V_we1(dataflow_in_loop_lea_U0_hcl_rdv3_V_we1),
    .prototype_V_address0(dataflow_in_loop_lea_U0_prototype_V_address0),
    .prototype_V_ce0(dataflow_in_loop_lea_U0_prototype_V_ce0),
    .prototype_V_d0(dataflow_in_loop_lea_U0_prototype_V_d0),
    .prototype_V_q0(64'd0),
    .prototype_V_we0(dataflow_in_loop_lea_U0_prototype_V_we0),
    .prototype_V_address1(dataflow_in_loop_lea_U0_prototype_V_address1),
    .prototype_V_ce1(dataflow_in_loop_lea_U0_prototype_V_ce1),
    .prototype_V_d1(dataflow_in_loop_lea_U0_prototype_V_d1),
    .prototype_V_q1(64'd0),
    .prototype_V_we1(dataflow_in_loop_lea_U0_prototype_V_we1),
    .prototypeCounter_V_address0(dataflow_in_loop_lea_U0_prototypeCounter_V_address0),
    .prototypeCounter_V_ce0(dataflow_in_loop_lea_U0_prototypeCounter_V_ce0),
    .prototypeCounter_V_d0(dataflow_in_loop_lea_U0_prototypeCounter_V_d0),
    .prototypeCounter_V_q0(32'd0),
    .prototypeCounter_V_we0(dataflow_in_loop_lea_U0_prototypeCounter_V_we0),
    .prototypeCounter_V_address1(dataflow_in_loop_lea_U0_prototypeCounter_V_address1),
    .prototypeCounter_V_ce1(dataflow_in_loop_lea_U0_prototypeCounter_V_ce1),
    .prototypeCounter_V_d1(dataflow_in_loop_lea_U0_prototypeCounter_V_d1),
    .prototypeCounter_V_q1(32'd0),
    .prototypeCounter_V_we1(dataflow_in_loop_lea_U0_prototypeCounter_V_we1),
    .p_0510_0_ap_vld(1'b0),
    .ap_start(dataflow_in_loop_lea_U0_ap_start),
    .ap_done(dataflow_in_loop_lea_U0_ap_done),
    .ap_ready(dataflow_in_loop_lea_U0_ap_ready),
    .ap_idle(dataflow_in_loop_lea_U0_ap_idle),
    .ap_continue(dataflow_in_loop_lea_U0_ap_continue)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        loop_dataflow_input_count <= 5'd0;
    end else begin
        if ((~(loop_dataflow_input_count == bound_minus_1) & (ap_start == 1'b1) & (dataflow_in_loop_lea_U0_ap_ready == 1'b1))) begin
            loop_dataflow_input_count <= (loop_dataflow_input_count + 5'd1);
        end else if (((loop_dataflow_input_count == bound_minus_1) & (ap_start == 1'b1) & (dataflow_in_loop_lea_U0_ap_ready == 1'b1))) begin
            loop_dataflow_input_count <= 5'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        loop_dataflow_output_count <= 5'd0;
    end else begin
        if ((~(loop_dataflow_output_count == bound_minus_1) & (dataflow_in_loop_lea_U0_ap_continue == 1'b1) & (dataflow_in_loop_lea_U0_ap_done == 1'b1))) begin
            loop_dataflow_output_count <= (loop_dataflow_output_count + 5'd1);
        end else if (((loop_dataflow_output_count == bound_minus_1) & (dataflow_in_loop_lea_U0_ap_continue == 1'b1) & (dataflow_in_loop_lea_U0_ap_done == 1'b1))) begin
            loop_dataflow_output_count <= 5'd0;
        end
    end
end

always @ (*) begin
    if (((loop_dataflow_output_count == bound_minus_1) & (dataflow_in_loop_lea_U0_ap_done == 1'b1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (loop_dataflow_output_count == 5'd0) & (dataflow_in_loop_lea_U0_ap_idle == 1'b1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((loop_dataflow_input_count == bound_minus_1) & (ap_start == 1'b1) & (dataflow_in_loop_lea_U0_ap_ready == 1'b1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((~(loop_dataflow_output_count == bound_minus_1) | (ap_continue == 1'b1))) begin
        dataflow_in_loop_lea_U0_ap_continue = 1'b1;
    end else begin
        dataflow_in_loop_lea_U0_ap_continue = 1'b0;
    end
end

assign ap_sync_continue = ap_continue;

assign ap_sync_done = dataflow_in_loop_lea_U0_ap_done;

assign ap_sync_ready = dataflow_in_loop_lea_U0_ap_ready;

assign bound_minus_1 = (5'd26 - 5'd1);

assign compute1_V_address0 = dataflow_in_loop_lea_U0_compute1_V_address0;

assign compute1_V_address1 = 5'd0;

assign compute1_V_ce0 = dataflow_in_loop_lea_U0_compute1_V_ce0;

assign compute1_V_ce1 = 1'b0;

assign compute1_V_d0 = dataflow_in_loop_lea_U0_compute1_V_d0;

assign compute1_V_d1 = 32'd0;

assign compute1_V_we0 = dataflow_in_loop_lea_U0_compute1_V_we0;

assign compute1_V_we1 = 1'b0;

assign dataflow_in_loop_lea_U0_ap_start = ap_start;

assign dataflow_in_loop_lea_U0_start_full_n = 1'b1;

assign dataflow_in_loop_lea_U0_start_write = 1'b0;

assign hcl_in_train_V_address0 = dataflow_in_loop_lea_U0_hcl_in_train_V_address0;

assign hcl_in_train_V_address1 = 20'd0;

assign hcl_in_train_V_ce0 = dataflow_in_loop_lea_U0_hcl_in_train_V_ce0;

assign hcl_in_train_V_ce1 = 1'b0;

assign hcl_in_train_V_d0 = 64'd0;

assign hcl_in_train_V_d1 = 64'd0;

assign hcl_in_train_V_we0 = 1'b0;

assign hcl_in_train_V_we1 = 1'b0;

assign hcl_rdv3_V_address0 = dataflow_in_loop_lea_U0_hcl_rdv3_V_address0;

assign hcl_rdv3_V_address1 = 18'd0;

assign hcl_rdv3_V_ce0 = dataflow_in_loop_lea_U0_hcl_rdv3_V_ce0;

assign hcl_rdv3_V_ce1 = 1'b0;

assign hcl_rdv3_V_d0 = 64'd0;

assign hcl_rdv3_V_d1 = 64'd0;

assign hcl_rdv3_V_we0 = 1'b0;

assign hcl_rdv3_V_we1 = 1'b0;

assign hcl_trainLabels_V_address0 = dataflow_in_loop_lea_U0_hcl_trainLabels_V_address0;

assign hcl_trainLabels_V_address1 = 13'd0;

assign hcl_trainLabels_V_ce0 = dataflow_in_loop_lea_U0_hcl_trainLabels_V_ce0;

assign hcl_trainLabels_V_ce1 = 1'b0;

assign hcl_trainLabels_V_d0 = 32'd0;

assign hcl_trainLabels_V_d1 = 32'd0;

assign hcl_trainLabels_V_we0 = 1'b0;

assign hcl_trainLabels_V_we1 = 1'b0;

assign prototypeCounter_V_address0 = dataflow_in_loop_lea_U0_prototypeCounter_V_address0;

assign prototypeCounter_V_address1 = 18'd0;

assign prototypeCounter_V_ce0 = dataflow_in_loop_lea_U0_prototypeCounter_V_ce0;

assign prototypeCounter_V_ce1 = 1'b0;

assign prototypeCounter_V_d0 = dataflow_in_loop_lea_U0_prototypeCounter_V_d0;

assign prototypeCounter_V_d1 = 32'd0;

assign prototypeCounter_V_we0 = dataflow_in_loop_lea_U0_prototypeCounter_V_we0;

assign prototypeCounter_V_we1 = 1'b0;

assign prototype_V_address0 = dataflow_in_loop_lea_U0_prototype_V_address0;

assign prototype_V_address1 = 12'd0;

assign prototype_V_ce0 = dataflow_in_loop_lea_U0_prototype_V_ce0;

assign prototype_V_ce1 = 1'b0;

assign prototype_V_d0 = dataflow_in_loop_lea_U0_prototype_V_d0;

assign prototype_V_d1 = 64'd0;

assign prototype_V_we0 = dataflow_in_loop_lea_U0_prototype_V_we0;

assign prototype_V_we1 = 1'b0;

endmodule //dataflow_parent_loop_1
